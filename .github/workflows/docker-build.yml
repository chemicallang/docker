name: CI Docker multi-arch build & push

on:
  workflow_dispatch:
  push:
    tags:
      - 'v*'   # optional: trigger for releases/tags
    branches:
      - main

permissions:
  contents: read
  packages: write
  id-token: write

env:
  REPO: chemicallang/chemical
  VERSION: v0.0.25   # or use ${{ github.ref_name }} for tag-driven

jobs:
  build-and-push:
    runs-on: ubuntu-24.04
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Matrix of images to build (base name => build args)
      - name: Build & push images
        uses: docker/build-push-action@v5
        with:
          push: true
          platforms: linux/amd64,linux/arm64
          # Build definitions; we will build multiple tags in one invocation using multiple builds
          # Build each variant (you can add/remove entries in the list)
          build: |
            # ubuntu
            context=.
            dockerfile=Dockerfile
            tags=${{ env.REPO }}:latest-ubuntu,${{ env.REPO }}:${{ env.VERSION }}-ubuntu
            build-args=BASE_IMAGE=ubuntu:24.04 PLATFORM=linux VARIANT= VERSION=${{ env.VERSION }}

            # tcc-ubuntu
            context=.
            dockerfile=Dockerfile
            tags=${{ env.REPO }}:latest-tcc-ubuntu,${{ env.REPO }}:${{ env.VERSION }}-tcc-ubuntu
            build-args=BASE_IMAGE=ubuntu:24.04 PLATFORM=linux VARIANT=tcc VERSION=${{ env.VERSION }}

            # alpine
            context=.
            dockerfile=Dockerfile
            tags=${{ env.REPO }}:latest-alpine,${{ env.REPO }}:${{ env.VERSION }}-alpine
            build-args=BASE_IMAGE=alpine:3.20 PLATFORM=linux-alpine VARIANT= VERSION=${{ env.VERSION }}

            # tcc-alpine
            context=.
            dockerfile=Dockerfile
            tags=${{ env.REPO }}:latest-tcc-alpine,${{ env.REPO }}:${{ env.VERSION }}-tcc-alpine
            build-args=BASE_IMAGE=alpine:3.20 PLATFORM=linux-alpine VARIANT=tcc VERSION=${{ env.VERSION }}

            # alpine-glibc (example: using an Alpine image with glibc; change as you need)
            context=.
            dockerfile=Dockerfile
            tags=${{ env.REPO }}:latest-alpine-glibc,${{ env.REPO }}:${{ env.VERSION }}-alpine-glibc
            build-args=BASE_IMAGE=frolvlad/alpine-glibc:alpine-3.20 PLATFORM=linux-alpine VARIANT= VERSION=${{ env.VERSION }}